#!/usr/bin/env sh

# Verificar que el usuario ingrese al menos un argumento
if [ "$#" -lt 2 ]; then
    echo "Uso: sat <comando> <archivo>"
    echo "Comandos disponibles:"
    echo "  prueba <archivo.c>   ‚Üí Compila el archivo .c con reglas Holberton"
    echo "  betty <archivo.c>    ‚Üí Verifica el estilo con Betty"
    echo "  help                 ‚Üí Muestra este mensaje"
    exit 1
fi

comando="$1"
archivo="$2"

case "$comando" in
    prueba)
        echo "üîß Compilando $archivo..."
        gcc -Wall -Werror -Wextra -pedantic -std=gnu89 "$archivo" -o "${archivo%.c}"
        if [ $? -eq 0 ]; then
            echo "‚úÖ Compilaci√≥n exitosa: ${archivo%.c}"
        else
            echo "‚ùå Error en la compilaci√≥n."
        fi
        ;;
    
    betty)
        echo "üîç Ejecutando Betty en $archivo..."
        if command -v betty >/dev/null 2>&1; then
            betty "$archivo"
        elif [ -f "/usr/local/Betty/betty-style.pl" ]; then
            /usr/local/Betty/betty-style.pl "$archivo"
        else
            echo "‚ùå Error: Betty no est√° instalado o no se encontr√≥."
        fi
        ;;
    
    help)
        echo "üí° SAT - Shell Automation Tool"
        echo "Uso: sat <comando> <archivo>"
        echo "Comandos disponibles:"
        echo "  prueba <archivo.c>   ‚Üí Compila el archivo .c con reglas Holberton"
        echo "  betty <archivo.c>    ‚Üí Verifica el estilo con Betty"
        echo "  help                 ‚Üí Muestra este mensaje"
        ;;
    
    *)
        echo "‚ùå Error: Comando no reconocido. Usa 'sat help' para ver los comandos disponibles."
        exit 1
        ;;
esac

